#target "InDesign"

function cleanFileName(fileName) {
    return fileName.replace(/[:\/\\\*\?\<\>\|]/g, "_");
}

function showDialog() {
    var dialog = new Window("dialog", "JPGTitleSnapper by @dt.Sandbox");

    dialog.add("statictext", undefined, "ScriptLabel:");
    var keywordInput = dialog.add("edittext", undefined, "pageTitle");
    keywordInput.characters = 30;

    dialog.add("statictext", undefined, "Export Path:");
    var pathInput = dialog.add("edittext", undefined, "C:/Users/yourname/Desktop/export/");
    pathInput.characters = 50;

    dialog.add("statictext", undefined, "Page Range (e.g., 1-3 or 5):");
    var rangeInput = dialog.add("edittext", undefined, "1-" + app.activeDocument.pages.length);
    rangeInput.characters = 20;

    var buttonGroup = dialog.add("group");
    buttonGroup.alignment = "right";
    buttonGroup.add("button", undefined, "OK");
    buttonGroup.add("button", undefined, "CANCEL", {name: "cancel"});

    var result = dialog.show();

    if (result == 1) {
        return {
            keyword: keywordInput.text,
            path: pathInput.text,
            range: rangeInput.text
        };
    } else {
        return null;
    }
}

function showExportOptionsDialog() {
    var dialog = new Window("dialog", "Export Options");

    dialog.add("statictext", undefined, "DPI:");
    var dpiDropdown = dialog.add("dropdownlist", undefined, ["72", "150", "300"]);
    dpiDropdown.selection = 2;

    dialog.add("statictext", undefined, "JPEG Quality:");
    var qualityDropdown = dialog.add("dropdownlist", undefined, ["LOW", "MEDIUM", "HIGH", "MAXIMUM"]);
    qualityDropdown.selection = 3;

    var buttonGroup = dialog.add("group");
    buttonGroup.alignment = "right";
    buttonGroup.add("button", undefined, "OK");
    buttonGroup.add("button", undefined, "CANCEL", {name: "cancel"});

    var result = dialog.show();

    if (result == 1) {
        return {
            dpi: parseInt(dpiDropdown.selection.text),
            quality: qualityDropdown.selection.text
        };
    } else {
        return null;
    }
}

function parseRange(rangeString, totalPages) {
    var pagesToExport = [];
    var parts = rangeString.split(",");

    for (var i = 0; i < parts.length; i++) {
        var range = parts[i].split("-");
        if (range.length === 1) {
            var page = parseInt(range[0]);
            if (page > 0 && page <= totalPages) {
                pagesToExport.push(page);
            }
        } else if (range.length === 2) {
            var start = parseInt(range[0]);
            var end = parseInt(range[1]);
            if (start > 0 && end <= totalPages && start <= end) {
                for (var j = start; j <= end; j++) {
                    pagesToExport.push(j);
                }
            }
        }
    }

    return pagesToExport;
}

var dialogResult = showDialog();
if (dialogResult === null) exit();

var keyword = dialogResult.keyword;
var exportPath = dialogResult.path;
var pageRange = dialogResult.range;

var exportOptions = showExportOptionsDialog();
if (exportOptions === null) exit();

var dpi = exportOptions.dpi;
var quality = exportOptions.quality;

app.jpegExportPreferences.exportResolution = dpi;

switch (quality) {
    case "LOW":
        app.jpegExportPreferences.jpegQuality = JPEGOptionsQuality.LOW;
        break;
    case "MEDIUM":
        app.jpegExportPreferences.jpegQuality = JPEGOptionsQuality.MEDIUM;
        break;
    case "HIGH":
        app.jpegExportPreferences.jpegQuality = JPEGOptionsQuality.HIGH;
        break;
    case "MAXIMUM":
        app.jpegExportPreferences.jpegQuality = JPEGOptionsQuality.MAXIMUM;
        break;
}

var myDocument = app.activeDocument;
var myPages = myDocument.pages;
var pagesToExport = parseRange(pageRange, myPages.length);

var exportResults = [];

for (var i = 0; i < pagesToExport.length; i++) {
    var pageIndex = pagesToExport[i] - 1;
    var myPage = myPages[pageIndex];
    var found = false;

    for (var j = 0; j < myPage.textFrames.length; j++) {
        var textFrame = myPage.textFrames[j];

        if (textFrame.label == keyword) {
            var pageName = textFrame.contents;

            if (pageName == "") {
                exportResults.push("Error: Empty title box on page " + (pageIndex + 1));
            } else {
                var cleanPageName = cleanFileName(pageName);
                var myFile = new File(exportPath + cleanPageName + ".jpg");

                app.jpegExportPreferences.pageString = myPage.name;

                myDocument.exportFile(ExportFormat.JPG, myFile, false);

                exportResults.push("Page " + (pageIndex + 1) + ": exported as '" + myFile.fsName + "'");
            }
            found = true;
            break;
        }
    }

    if (!found) {
        exportResults.push("Error: Label '" + keyword + "' not found on page " + (pageIndex + 1));
    }
}

alert(exportResults.join("\n"));
